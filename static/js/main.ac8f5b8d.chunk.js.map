{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","hasUrlError","changeUrlError","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","search","htmlFor","type","classNames","event","prevNewMovie","target","onBlur","NewMovie","onAdd","count","setCount","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","newMovie","setNewMovie","addActive","onSubmit","e","preventDefault","prev","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"iuEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,sCCWpC,IAAMC,EAA6B,SAAC,GASpC,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,MAOI,IANJC,aAMI,MANIF,EAMJ,MALJG,mBAKI,sBALmBD,GAKnB,MAJJE,gBAII,aAHJC,gBAGI,MAHO,WAAS,EAGhB,MAFJC,mBAEI,aADJC,sBACI,MADa,WAAS,EACtB,EACJ,EAAaC,oBAAS,2BAASR,EAAT,YAffS,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAaa,IAAfC,EAAP,oBAEA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWV,IAAaH,EAAMgB,QAKjC,WAATjB,GAA8B,YAATA,IACrBC,GAASa,GAAWV,GACvBG,GAA0C,IAA3BN,EAAMiB,OAJP,yKAchB,OACE,sBAAK/B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQgC,QAASN,EAAlC,SACGX,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEa,KAAMA,EACNoB,KAAK,OACLP,GAAIA,EACJ,0BAAkBb,GAClBb,UAAWkC,IAAW,QAAS,CAC7B,YAAaL,GAAYV,IAE3BH,YAAaA,EACbF,MAAOA,EACPI,SAxBa,SAACiB,GACpBjB,GAAS,SAAAkB,GAAY,kCAChBA,GADgB,kBAElBD,EAAME,OAAOxB,KAAOsB,EAAME,OAAOvB,OAFf,GAItB,EAoBOwB,OAAQ,kBAAMV,GAAW,EAAjB,MAIXC,GACC,mBAAG7B,UAAU,iBAAb,mBAAkCe,EAAlC,kBAGAI,IAAgBU,GAChB,mBAAG7B,UAAU,iBAAb,mBAAkCe,EAAlC,qBAIP,EC1EYwB,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA0BnB,mBAAS,GAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAsCrB,oBAAS,GAA/C,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAAwCvB,oBAAS,GAAjD,mBAAOwB,EAAP,KAAqBC,EAArB,KAEA,EAAgCzB,mBAAS,CACvCjB,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAOoC,EAAP,KAAiBC,EAAjB,KAQMC,GAAaF,EAAS3C,QACtB2C,EAAS7C,SACT6C,EAASxC,UACTwC,EAASpC,OAkBf,OACE,uBACEX,UAAU,WAEVkD,SApBe,SAACC,GAClBA,EAAEC,iBAEFZ,GAAM,SAAAa,GAAI,4BAAQA,GAAR,CAAcN,GAAd,IAEVC,EAAY,CACV5C,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KAGV+B,EAASD,EAAQ,EAClB,EAGC,UAKE,oBAAIzC,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOiC,EAAS3C,MAChBc,SAAU8B,EACV/B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,cACLE,MAAM,cACND,MAAOiC,EAAS1C,YAChBa,SAAU8B,IAGZ,cAAC,EAAD,CACEnC,KAAK,SACLE,MAAM,YACND,MAAOiC,EAAS7C,OAChBgB,SAAU8B,EACV/B,UAAQ,EACRE,YAAawB,EACbvB,eAAgBwB,IAGlB,cAAC,EAAD,CACE/B,KAAK,UACLE,MAAM,WACND,MAAOiC,EAASxC,QAChBW,SAAU8B,EACV/B,UAAQ,EACRE,YAAa0B,EACbzB,eAAgB0B,IAGlB,cAAC,EAAD,CACEjC,KAAK,SACLE,MAAM,UACND,MAAOiC,EAASpC,OAChBO,SAAU8B,EACV/B,UAAQ,IAGV,qBAAKjB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACL,UAAQ,gBACRjC,UAAU,iBACVsD,SAAUL,GAAaN,GAAeE,EAJxC,uBAlDCJ,EA8DV,E,QCrGYc,EAAM,WACjB,MAA4BlC,mBAASmC,GAArC,mBAAO/C,EAAP,KAAegD,EAAf,KAEA,OACE,sBAAKzD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAUwC,MAAOiB,QAIxB,ECfDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.ac8f5b8d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: Dispatch<SetStateAction<Movie>>,\n  hasUrlError?: boolean,\n  changeUrlError?: (value: boolean) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  hasUrlError = false,\n  changeUrlError = () => { },\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  if ((name === 'imgUrl' || name === 'imdbUrl')\n    && value && touched && required) {\n    changeUrlError(value.search(pattern) === -1);\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(prevNewMovie => ({\n      ...prevNewMovie,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasUrlError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(hasUrlError && !hasError) && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  onAdd: Dispatch<SetStateAction<Movie[]>>;\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const addActive = !newMovie.title\n    || !newMovie.imgUrl\n    || !newMovie.imdbUrl\n    || !newMovie.imdbId;\n\n  const submitForm = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    onAdd(prev => [...prev, newMovie]);\n\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setCount(count + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={submitForm}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={setNewMovie}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={setNewMovie}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={setNewMovie}\n        required\n        hasUrlError={imgUrlError}\n        changeUrlError={setImgUrlError}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={setNewMovie}\n        required\n        hasUrlError={imdbUrlError}\n        changeUrlError={setImdbUrlError}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={setNewMovie}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={addActive || imgUrlError || imdbUrlError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}